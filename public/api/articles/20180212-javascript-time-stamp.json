{"title":"JavaScript时间戳总结","uid":"28e2c50cddef1ae63b6743f914e9f466","slug":"20180212-javascript-time-stamp","date":"2018-02-12T06:22:00.000Z","updated":"2024-02-05T06:46:37.331Z","comments":true,"path":"api/articles/20180212-javascript-time-stamp.json","keywords":null,"cover":"https://s-gz-2804-blog-image.oss.dogecdn.com/20220223163912.png","content":"<p>javascript时间戳经常用到，现在总结一下。</p>\n<h1 id=\"一、时间戳函数\"><a href=\"#一、时间戳函数\" class=\"headerlink\" title=\"一、时间戳函数\"></a>一、时间戳函数</h1><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;   </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getLocalTime</span>(<span class=\"params\">nS</span>) &#123;   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"built_in\">parseInt</span>(nS) * <span class=\"number\">1000</span>).<span class=\"title function_\">toLocaleString</span>().<span class=\"title function_\">replace</span>(<span class=\"regexp\">/:\\d&#123;1,2&#125;$/</span>,<span class=\"string\">&#x27; &#x27;</span>);   </span><br><span class=\"line\">&#125;   </span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"title function_\">getLocalTime</span>(<span class=\"number\">1293072805</span>));   </span><br><span class=\"line\">&lt;/script&gt; </span><br></pre></td></tr></table></figure>\n<p>也可以用如下，想取几位就几位，注意，空格也算！</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;   </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getLocalTime</span>(<span class=\"params\">nS</span>) &#123;   </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"built_in\">parseInt</span>(nS) * <span class=\"number\">1000</span>).<span class=\"title function_\">toLocaleString</span>().<span class=\"title function_\">substr</span>(<span class=\"number\">0</span>,<span class=\"number\">14</span>)&#125;   </span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"title function_\">getLocalTime</span>(<span class=\"number\">1293072805</span>));   </span><br><span class=\"line\">&lt;/script&gt;   </span><br></pre></td></tr></table></figure>\n\n<p>如果想弹出：2018-02-12 14:00:00这个格式的也好办</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;   </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getLocalTime</span>(<span class=\"params\">nS</span>) &#123;   </span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"built_in\">parseInt</span>(nS) * <span class=\"number\">1000</span>).<span class=\"title function_\">toLocaleString</span>().<span class=\"title function_\">replace</span>(<span class=\"regexp\">/年|月/g</span>, <span class=\"string\">&quot;-&quot;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/日/g</span>, <span class=\"string\">&quot; &quot;</span>);    </span><br><span class=\"line\">&#125;   </span><br><span class=\"line\"><span class=\"title function_\">alert</span>(<span class=\"title function_\">getLocalTime</span>(<span class=\"number\">1177824835</span>));   </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>另外，也可以这么写：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span>   <span class=\"title function_\">formatDate</span>(<span class=\"params\">now</span>)   &#123;   </span><br><span class=\"line\">  <span class=\"keyword\">var</span>   year=now.<span class=\"title function_\">getYear</span>();   </span><br><span class=\"line\">  <span class=\"keyword\">var</span>   month=now.<span class=\"title function_\">getMonth</span>()+<span class=\"number\">1</span>;   </span><br><span class=\"line\">  <span class=\"keyword\">var</span>   date=now.<span class=\"title function_\">getDate</span>();   </span><br><span class=\"line\">  <span class=\"keyword\">var</span>   hour=now.<span class=\"title function_\">getHours</span>();   </span><br><span class=\"line\">  <span class=\"keyword\">var</span>   minute=now.<span class=\"title function_\">getMinutes</span>();   </span><br><span class=\"line\">  <span class=\"keyword\">var</span>   second=now.<span class=\"title function_\">getSeconds</span>();   </span><br><span class=\"line\">  <span class=\"keyword\">return</span>   year+<span class=\"string\">&quot;-&quot;</span>+month+<span class=\"string\">&quot;-&quot;</span>+date+<span class=\"string\">&quot;   &quot;</span>+hour+<span class=\"string\">&quot;:&quot;</span>+minute+<span class=\"string\">&quot;:&quot;</span>+second;   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  <span class=\"keyword\">var</span>   d=<span class=\"keyword\">new</span>   <span class=\"title class_\">Date</span>(<span class=\"number\">1230999938</span>);   </span><br><span class=\"line\">  <span class=\"title function_\">alert</span>(<span class=\"title function_\">formatDate</span>(d));</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"二、知识普及\"><a href=\"#二、知识普及\" class=\"headerlink\" title=\"二、知识普及\"></a>二、知识普及</h1><h3 id=\"1、当前系统区域设置格式-toLocaleDateString和toLocaleTimeString\"><a href=\"#1、当前系统区域设置格式-toLocaleDateString和toLocaleTimeString\" class=\"headerlink\" title=\"1、当前系统区域设置格式(toLocaleDateString和toLocaleTimeString)\"></a>1、当前系统区域设置格式(toLocaleDateString和toLocaleTimeString)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">例子:(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">toLocaleDateString</span>() + <span class=\"string\">&quot; &quot;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">toLocaleTimeString</span>() </span><br><span class=\"line\">结果: <span class=\"number\">2018</span>年<span class=\"number\">2</span>月<span class=\"number\">12</span>日 <span class=\"number\">16</span>:<span class=\"number\">13</span>:<span class=\"number\">11</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-普通字符串-toDateString和toTimeString\"><a href=\"#2-普通字符串-toDateString和toTimeString\" class=\"headerlink\" title=\"2.普通字符串(toDateString和toTimeString)\"></a>2.普通字符串(toDateString和toTimeString)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">例子: (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">toDateString</span>() + <span class=\"string\">&quot; &quot;</span> + (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">toTimeString</span>() </span><br><span class=\"line\">结果:<span class=\"title class_\">Tue</span> <span class=\"title class_\">Jan</span> <span class=\"number\">29</span> <span class=\"number\">2008</span> <span class=\"number\">16</span>:<span class=\"number\">13</span>:<span class=\"number\">11</span> <span class=\"variable constant_\">UTC</span>+<span class=\"number\">0800</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-格林威治标准时间-toGMTString\"><a href=\"#3-格林威治标准时间-toGMTString\" class=\"headerlink\" title=\"3.格林威治标准时间(toGMTString)\"></a>3.格林威治标准时间(toGMTString)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">例子: (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">toGMTString</span>() </span><br><span class=\"line\">结果:<span class=\"title class_\">Tue</span>, <span class=\"number\">29</span> <span class=\"title class_\">Jan</span> <span class=\"number\">2008</span> <span class=\"number\">08</span>:<span class=\"number\">13</span>:<span class=\"number\">11</span> <span class=\"variable constant_\">UTC</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-全球标准时间-toUTCString\"><a href=\"#4-全球标准时间-toUTCString\" class=\"headerlink\" title=\"4.全球标准时间(toUTCString)\"></a>4.全球标准时间(toUTCString)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">例子: (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">toUTCString</span>() </span><br><span class=\"line\">结果:<span class=\"title class_\">Tue</span>, <span class=\"number\">29</span> <span class=\"title class_\">Jan</span> <span class=\"number\">2008</span> <span class=\"number\">08</span>:<span class=\"number\">13</span>:<span class=\"number\">11</span> <span class=\"variable constant_\">UTC</span> </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-Date对象字符串-toString\"><a href=\"#5-Date对象字符串-toString\" class=\"headerlink\" title=\"5.Date对象字符串(toString)\"></a>5.Date对象字符串(toString)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">例子: (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>()).<span class=\"title function_\">toString</span>() </span><br><span class=\"line\">结果:<span class=\"title class_\">Tue</span> <span class=\"title class_\">Jan</span> <span class=\"number\">29</span> <span class=\"number\">16</span>:<span class=\"number\">13</span>:<span class=\"number\">11</span> <span class=\"variable constant_\">UTC</span>+<span class=\"number\">0800</span> <span class=\"number\">2008</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Date</span>对象构造函数 </span><br><span class=\"line\"><span class=\"title class_\">Date</span>对象具有多种构造函数。 </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>() </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(milliseconds) </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(datestring) </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(year, month) </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(year, month, day) </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(year, month, day, hours) </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(year, month, day, hours, minutes) </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(year, month, day, hours, minutes, seconds) </span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(year, month, day, hours, minutes, seconds, microseconds) </span><br><span class=\"line\"><span class=\"title class_\">Date</span>对象构造函数参数说明 </span><br><span class=\"line\">milliseconds - 距离<span class=\"title class_\">JavaScript</span>内部定义的起始时间<span class=\"number\">1970</span>年<span class=\"number\">1</span>月<span class=\"number\">1</span>日的毫秒数 </span><br><span class=\"line\">datestring - 字符串代表的日期与时间。此字符串可以使用<span class=\"title class_\">Date</span>.<span class=\"title function_\">parse</span>()转换 </span><br><span class=\"line\">year - 四位数的年份，如果取值为<span class=\"number\">0</span>-<span class=\"number\">99</span>，则在其之上加上<span class=\"number\">1900</span> </span><br><span class=\"line\">month - <span class=\"number\">0</span>(代表一月)-<span class=\"number\">11</span>(代表十二月)之间的月份 </span><br><span class=\"line\">day - <span class=\"number\">1</span>-<span class=\"number\">31</span>之间的日期 </span><br><span class=\"line\">hours - <span class=\"number\">0</span>(代表午夜)-<span class=\"number\">23</span>之间的小时数 </span><br><span class=\"line\">minutes - <span class=\"number\">0</span>-<span class=\"number\">59</span>之间的分钟数 </span><br><span class=\"line\">seconds - <span class=\"number\">0</span>-<span class=\"number\">59</span>之间的秒数 </span><br><span class=\"line\">microseconds - <span class=\"number\">0</span>-<span class=\"number\">999</span>之间的毫秒数 </span><br><span class=\"line\"><span class=\"title class_\">Date</span>对象返回值 </span><br><span class=\"line\">如果没有任何参数，将返回当前日期 </span><br><span class=\"line\">如果参数为一个数字，将数字视为毫秒值，转换为日期 </span><br><span class=\"line\">如果参数为一个字符串，将字符串视为日期的字符串表示，转换为日期 </span><br><span class=\"line\">还可以使用六个构造函数精确定义，并返回时间 </span><br><span class=\"line\">示例 </span><br><span class=\"line\"><span class=\"keyword\">var</span> d1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(); </span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">write</span>(d1.<span class=\"title function_\">toString</span>()); </span><br><span class=\"line\"><span class=\"keyword\">var</span> d2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"string\">&quot;2009-08-08 12:12:12); </span></span><br><span class=\"line\"><span class=\"string\">document.write(d2.toString()); </span></span><br><span class=\"line\"><span class=\"string\">var d3 = new Date(2009, 8, 8); </span></span><br><span class=\"line\"><span class=\"string\">document.write(d3.toString()); </span></span><br><span class=\"line\"><span class=\"string\">Date做为JavaScript的一种内置对象，必须使用new的方式创建。 </span></span><br><span class=\"line\"><span class=\"string\">Date对象在JavaScript内部的表示方式是，距1970年1月1日午夜(GMT时间)的毫秒数(时间戳)，我们在这里也把Date的内部表示形式称为时间戳。可以使用getTime()将Date对象转换为Date的时间戳，方法setTime()可以把Date的时间戳转换为Date的标准形式。 </span></span><br><span class=\"line\"><span class=\"string\">Date函数使用语法 </span></span><br><span class=\"line\"><span class=\"string\">date.方法名(参数1,参数2,...); </span></span><br><span class=\"line\"><span class=\"string\">Date.方法名(); </span></span><br><span class=\"line\"><span class=\"string\">date代表一个日期对象的实例，Date代表日期对象，date.方法名调用的为对象的成员函数 </span></span><br><span class=\"line\"><span class=\"string\">Date.方法名调用的为对象的静态函数 </span></span><br><span class=\"line\"><span class=\"string\">示例 </span></span><br><span class=\"line\"><span class=\"string\">var d=new Date(); </span></span><br><span class=\"line\"><span class=\"string\">var d2=Date.UTC(); </span></span><br><span class=\"line\"><span class=\"string\">JavaScript_Date函数按功能分类 </span></span><br><span class=\"line\"><span class=\"string\">日期获取类函数 </span></span><br><span class=\"line\"><span class=\"string\">Date() 函数 -- Date对象的构造函数 </span></span><br><span class=\"line\"><span class=\"string\">getDate() 函数 -- 返回date对象中的月份中的天数(1-31) </span></span><br><span class=\"line\"><span class=\"string\">getDay()函数 -- 返回date对象中的星期中的天数(0-6) </span></span><br><span class=\"line\"><span class=\"string\">getFullYear() 函数 -- 返回date对象中的四位数年份 </span></span><br><span class=\"line\"><span class=\"string\">getHours()函数 -- 返回date对象中的小时数(0-23) </span></span><br><span class=\"line\"><span class=\"string\">getMilliseconds() 函数 -- 返回date对象中的毫秒数(0-999) </span></span><br><span class=\"line\"><span class=\"string\">getMinutes() 函数 -- 返回date对象中的分钟数(0-59) </span></span><br><span class=\"line\"><span class=\"string\">getMonth() 函数 -- 返回date对象中的月份数(0-11) </span></span><br><span class=\"line\"><span class=\"string\">getSeconds() 函数 -- 返回date对象中的秒数(0-59) </span></span><br><span class=\"line\"><span class=\"string\">getTime() 函数 -- 返回date对象的时间戳表示法(毫秒表示) </span></span><br><span class=\"line\"><span class=\"string\">getTimezoneOffset() 函数 -- 返回本地时间与用UTC表示当前日期的时间差，以分钟为单位 </span></span><br><span class=\"line\"><span class=\"string\">getUTCDate() 函数 -- 返回date对象中用世界标准时间(UTC)表示的月份中的一天(1-31) </span></span><br><span class=\"line\"><span class=\"string\">getUTCDay() 函数 -- 返回date对象中用世界标准时间(UTC)表示的周中的一天(0-6) </span></span><br><span class=\"line\"><span class=\"string\">getUTCFullYear() 函数 -- 返回date对象中用世界标准时间(UTC)表示的四位年份 </span></span><br><span class=\"line\"><span class=\"string\">getUTCHours() 函数 -- 返回date对象中用世界标准时间(UTC)表示的小时数(0-23) </span></span><br><span class=\"line\"><span class=\"string\">getUTCMilliseconds() 函数 -- 返回date对象中用世界标准时间(UTC)表示的毫秒数(0-999) </span></span><br><span class=\"line\"><span class=\"string\">getUTCMinutes() 函数 -- 返回date对象中用世界标准时间(UTC)表示的分钟数(0-59) </span></span><br><span class=\"line\"><span class=\"string\">getUTCMonth() 函数 -- 返回date对象中用世界标准时间(UTC)表示的月份数(0-11) </span></span><br><span class=\"line\"><span class=\"string\">getUTCSeconds() 函数 -- 返回date对象中用世界标准时间(UTC)表示的秒数(0-59) </span></span><br><span class=\"line\"><span class=\"string\">getYear() 函数 -- 返回date对象的年份(真实年份减去1900) </span></span><br><span class=\"line\"><span class=\"string\">Date.UTC()函数 -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">日期设置类函数 </span></span><br><span class=\"line\"><span class=\"string\">setDate() 函数 -- 设置date对象中月份的一天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setFullYear() 函数 -- 设置date对象中的年份，月份和天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setHours() 函数 -- 设置date对象的小时，分钟，秒和毫秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setMilliseconds() 函数 -- 设置date对象的毫秒数，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setMinutes() 函数 -- 设置date对象的分钟，秒，毫秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setMonth() 函数 -- 设置date对象中月份，天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setSeconds() 函数 -- 设置date对象中月份的一天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setTime() 函数 -- 使用毫秒数设置date对象，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCDate() 函数 -- 设置date对象中用世界标准时间(UTC)表示的月份的一天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCFullYear() 函数 -- 设置date对象中用世界标准时间(UTC)表示的年份，月份和天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCHours() 函数 --- 设置date对象中用世界标准时间(UTC)表示的小时，分钟，秒和毫秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCMilliseconds() 函数 -- 设置date对象中用世界标准时间(UTC)表示的毫秒数，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCMinutes() 函数 -- 设置date对象中用世界标准时间(UTC)表示的分钟，秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCMonth() 函数 -- 设置date对象中用世界标准时间(UTC)表示的月份，天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCSeconds() 函数 -- 设置date对象中用世界标准时间(UTC)表示的秒，毫秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setYear() 函数 -- 设置date对象的年份(真实年份减去1900) </span></span><br><span class=\"line\"><span class=\"string\">日期打印类函数 </span></span><br><span class=\"line\"><span class=\"string\">toDateString() 函数 -- 返回date对象的日期部分的字符串表示 </span></span><br><span class=\"line\"><span class=\"string\">toGMTString() 函数 -- 返回date对象的格林威治时间(GMT)的字符串表示 </span></span><br><span class=\"line\"><span class=\"string\">toLocaleDateString函数 -- 返回date对象的日期部分的本地化字符串 </span></span><br><span class=\"line\"><span class=\"string\">toLocaleTimeString函数 -- 返回date对象的时间部分的本地化字符串 </span></span><br><span class=\"line\"><span class=\"string\">toTimeString()函数 -- 返回date对象的时间部分的字符串 </span></span><br><span class=\"line\"><span class=\"string\">toUTCString函数 -- 返回date对象的世界标准时间(UTC)的字符串表示 </span></span><br><span class=\"line\"><span class=\"string\">日期解析类函数 </span></span><br><span class=\"line\"><span class=\"string\">Date.parse() 函数 -- 解析一个日期的字符串，并返回该日期距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">JavaScript_Date函数按照字母分类 </span></span><br><span class=\"line\"><span class=\"string\">Date() 函数 -- Date对象的构造函数 </span></span><br><span class=\"line\"><span class=\"string\">getDate() 函数 -- 返回date对象中的月份中的天数(1-31) </span></span><br><span class=\"line\"><span class=\"string\">getDay()函数 -- 返回date对象中的星期中的天数(0-6) </span></span><br><span class=\"line\"><span class=\"string\">getFullYear() 函数 -- 返回date对象中的四位数年份 </span></span><br><span class=\"line\"><span class=\"string\">getHours()函数 -- 返回date对象中的小时数(0-23) </span></span><br><span class=\"line\"><span class=\"string\">getMilliseconds() 函数 -- 返回date对象中的毫秒数(0-999) </span></span><br><span class=\"line\"><span class=\"string\">getMinutes() 函数 -- 返回date对象中的分钟数(0-59) </span></span><br><span class=\"line\"><span class=\"string\">getMonth() 函数 -- 返回date对象中的月份数(0-11) </span></span><br><span class=\"line\"><span class=\"string\">getSeconds() 函数 -- 返回date对象中的秒数(0-59) </span></span><br><span class=\"line\"><span class=\"string\">getTime() 函数 -- 返回date对象的时间戳表示法(毫秒表示) </span></span><br><span class=\"line\"><span class=\"string\">getTimezoneOffset() 函数 -- 返回本地时间与用UTC表示当前日期的时间差，以分钟为单位 </span></span><br><span class=\"line\"><span class=\"string\">getUTCDate() 函数 -- 返回date对象中用世界标准时间(UTC)表示的月份中的一天(1-31) </span></span><br><span class=\"line\"><span class=\"string\">getUTCDay() 函数 -- 返回date对象中用世界标准时间(UTC)表示的周中的一天(0-6) </span></span><br><span class=\"line\"><span class=\"string\">getUTCFullYear() 函数 -- 返回date对象中用世界标准时间(UTC)表示的四位年份 </span></span><br><span class=\"line\"><span class=\"string\">getUTCHours() 函数 -- 返回date对象中用世界标准时间(UTC)表示的小时数(0-23) </span></span><br><span class=\"line\"><span class=\"string\">getUTCMilliseconds() 函数 -- 返回date对象中用世界标准时间(UTC)表示的毫秒数(0-999) </span></span><br><span class=\"line\"><span class=\"string\">getUTCMinutes() 函数 -- 返回date对象中用世界标准时间(UTC)表示的分钟数(0-59) </span></span><br><span class=\"line\"><span class=\"string\">getUTCMonth() 函数 -- 返回date对象中用世界标准时间(UTC)表示的月份数(0-11) </span></span><br><span class=\"line\"><span class=\"string\">getUTCSeconds() 函数 -- 返回date对象中用世界标准时间(UTC)表示的秒数(0-59) </span></span><br><span class=\"line\"><span class=\"string\">getYear() 函数 -- 返回date对象的年份(真实年份减去1900) </span></span><br><span class=\"line\"><span class=\"string\">Date.parse() 函数 -- 解析一个日期的字符串，并返回该日期距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setDate() 函数 -- 设置date对象中月份的一天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setFullYear() 函数 -- 设置date对象中的年份，月份和天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setHours() 函数 -- 设置date对象的小时，分钟，秒和毫秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setMilliseconds() 函数 -- 设置date对象的毫秒数，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setMinutes() 函数 -- 设置date对象的分钟，秒，毫秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setMonth() 函数 -- 设置date对象中月份，天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setSeconds() 函数 -- 设置date对象中月份的一天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setTime() 函数 -- 使用毫秒数设置date对象，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCDate() 函数 -- 设置date对象中用世界标准时间(UTC)表示的月份的一天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCFullYear() 函数 -- 设置date对象中用世界标准时间(UTC)表示的年份，月份和天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCHours() 函数 --- 设置date对象中用世界标准时间(UTC)表示的小时，分钟，秒和毫秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCMilliseconds() 函数 -- 设置date对象中用世界标准时间(UTC)表示的毫秒数，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCMinutes() 函数 -- 设置date对象中用世界标准时间(UTC)表示的分钟，秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCMonth() 函数 -- 设置date对象中用世界标准时间(UTC)表示的月份，天，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setUTCSeconds() 函数 -- 设置date对象中用世界标准时间(UTC)表示的秒，毫秒，并返回date对象距1970年1月1日午夜之间的毫秒数(时间戳) </span></span><br><span class=\"line\"><span class=\"string\">setYear() 函数 -- 设置date对象的年份(真实年份减去1900) </span></span><br><span class=\"line\"><span class=\"string\">toDateString() 函数 -- 返回date对象的日期部分的字符串表示 </span></span><br><span class=\"line\"><span class=\"string\">toGMTString() 函数 -- 返回date对象的格林威治时间(GMT)的字符串表示 </span></span><br><span class=\"line\"><span class=\"string\">toLocaleDateString函数 -- 返回date对象的日期部分的本地化字符串 </span></span><br><span class=\"line\"><span class=\"string\">toLocaleTimeString函数 -- 返回date对象的时间部分的本地化字符串 </span></span><br><span class=\"line\"><span class=\"string\">toTimeString()函数 -- 返回date对象的时间部分的字符串 </span></span><br><span class=\"line\"><span class=\"string\">toUTCString函数 -- 返回date对象的世界标准时间(UTC)的字符串表示 </span></span><br><span class=\"line\"><span class=\"string\">Date.UTC()函数 -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"三、Javascript的时间戳和php的时间戳转换\"><a href=\"#三、Javascript的时间戳和php的时间戳转换\" class=\"headerlink\" title=\"三、Javascript的时间戳和php的时间戳转换\"></a>三、Javascript的时间戳和php的时间戳转换</h1><p>js的时间戳通常是13位，php的时间戳是10位,转换函数如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> nowtime = (<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>).<span class=\"title function_\">getTime</span>();<span class=\"comment\">/*当前时间戳*/</span>   </span><br><span class=\"line\"><span class=\"comment\">/*转换时间，计算差值*/</span>   </span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">comptime</span>(<span class=\"params\">beginTime,endTime</span>)&#123;   </span><br><span class=\"line\">  <span class=\"keyword\">var</span> secondNum = <span class=\"built_in\">parseInt</span>((endTime-beginTime*<span class=\"number\">1000</span>)/<span class=\"number\">1000</span>);<span class=\"comment\">//计算时间戳差值      </span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>(secondNum&gt;=<span class=\"number\">0</span>&amp;&amp;secondNum&lt;<span class=\"number\">60</span>)&#123;   </span><br><span class=\"line\">      <span class=\"keyword\">return</span> secondNum+<span class=\"string\">&#x27;秒前&#x27;</span>;   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (secondNum&gt;=<span class=\"number\">60</span>&amp;&amp;secondNum&lt;<span class=\"number\">3600</span>)&#123;   </span><br><span class=\"line\">      <span class=\"keyword\">var</span> nTime=<span class=\"built_in\">parseInt</span>(secondNum/<span class=\"number\">60</span>);   </span><br><span class=\"line\">      <span class=\"keyword\">return</span> nTime+<span class=\"string\">&#x27;分钟前&#x27;</span>;   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (secondNum&gt;=<span class=\"number\">3600</span>&amp;&amp;secondNum&lt;<span class=\"number\">3600</span>*<span class=\"number\">24</span>)&#123;   </span><br><span class=\"line\">      <span class=\"keyword\">var</span> nTime=<span class=\"built_in\">parseInt</span>(secondNum/<span class=\"number\">3600</span>);   </span><br><span class=\"line\">      <span class=\"keyword\">return</span> nTime+<span class=\"string\">&#x27;小时前&#x27;</span>;   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">  <span class=\"keyword\">else</span>&#123;   </span><br><span class=\"line\">      <span class=\"keyword\">var</span> nTime = <span class=\"built_in\">parseInt</span>(secondNum/<span class=\"number\">86400</span>);   </span><br><span class=\"line\">      <span class=\"keyword\">return</span> nTime+<span class=\"string\">&#x27;天前&#x27;</span>;   </span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">&#125;   </span><br><span class=\"line\"></span><br><span class=\"line\">t = <span class=\"title function_\">comptime</span>(<span class=\"string\">&quot;1324362556&quot;</span>,nowtime);<span class=\"comment\">//timestamp为PHP通过ajax回传的时间戳   </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(t); </span><br></pre></td></tr></table></figure>","text":"javascript时间戳经常用到，现在总结一下。 一、时间戳函数&lt;script&gt; function getLocalTime(nS) &#123;...","permalink":"/post/20180212-javascript-time-stamp","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"js","slug":"js","count":1,"path":"api/tags/js.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%97%B6%E9%97%B4%E6%88%B3%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">一、时间戳函数</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E7%9F%A5%E8%AF%86%E6%99%AE%E5%8F%8A\"><span class=\"toc-text\">二、知识普及</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%BD%93%E5%89%8D%E7%B3%BB%E7%BB%9F%E5%8C%BA%E5%9F%9F%E8%AE%BE%E7%BD%AE%E6%A0%BC%E5%BC%8F-toLocaleDateString%E5%92%8CtoLocaleTimeString\"><span class=\"toc-text\">1、当前系统区域设置格式(toLocaleDateString和toLocaleTimeString)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%99%AE%E9%80%9A%E5%AD%97%E7%AC%A6%E4%B8%B2-toDateString%E5%92%8CtoTimeString\"><span class=\"toc-text\">2.普通字符串(toDateString和toTimeString)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%A0%BC%E6%9E%97%E5%A8%81%E6%B2%BB%E6%A0%87%E5%87%86%E6%97%B6%E9%97%B4-toGMTString\"><span class=\"toc-text\">3.格林威治标准时间(toGMTString)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%85%A8%E7%90%83%E6%A0%87%E5%87%86%E6%97%B6%E9%97%B4-toUTCString\"><span class=\"toc-text\">4.全球标准时间(toUTCString)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-Date%E5%AF%B9%E8%B1%A1%E5%AD%97%E7%AC%A6%E4%B8%B2-toString\"><span class=\"toc-text\">5.Date对象字符串(toString)</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81Javascript%E7%9A%84%E6%97%B6%E9%97%B4%E6%88%B3%E5%92%8Cphp%E7%9A%84%E6%97%B6%E9%97%B4%E6%88%B3%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">三、Javascript的时间戳和php的时间戳转换</span></a></li></ol>","author":{"name":"络擎","slug":"blog-author","avatar":"http://s-gz-2804-blog-image.oss.dogecdn.com/20230204150000.jpg","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"谈谈敏捷开发","uid":"ede919be316f4f79677d41980bcb9458","slug":"20190311-about-agility-dev","date":"2019-03-11T04:00:00.000Z","updated":"2024-02-05T06:46:37.332Z","comments":true,"path":"api/articles/20190311-about-agility-dev.json","keywords":null,"cover":"https://s-gz-2804-blog-image.oss.dogecdn.com/20220224160221.png","text":" 谈谈敏捷开发 小步快跑、敏捷开发 真实的敏捷开发 后注 谈谈敏捷开发好久没有更新一下博客，最近有在尝试新的领域，可是一直没能积累下什么重要的知识、或者形成了什...","permalink":"/post/20190311-about-agility-dev","photos":["https://s-gz-2804-blog-image.oss.dogecdn.com/20220224160221.png"],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"网站收藏","slug":"网站收藏","count":1,"path":"api/categories/网站收藏.json"}],"tags":[{"name":"agile","slug":"agile","count":1,"path":"api/tags/agile.json"}],"author":{"name":"络擎","slug":"blog-author","avatar":"http://s-gz-2804-blog-image.oss.dogecdn.com/20230204150000.jpg","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}}},"next_post":{"title":"前端开发必备网站汇总","uid":"a73d625d9b33f42affb7d0477c9b4d7c","slug":"20180210-web-development-necessary","date":"2018-02-10T07:00:00.000Z","updated":"2024-02-05T06:46:37.330Z","comments":true,"path":"api/articles/20180210-web-development-necessary.json","keywords":null,"cover":"https://s-gz-2804-blog-image.oss.dogecdn.com/20220224160023.png","text":"前言写个前端开发者，包含行业大牛博客，前端社区，开发工具，各种预编译工具打包工具和项目构建工具！更多内容持续更新… 大牛博客阮一峰博客： http://www....","permalink":"/post/20180210-web-development-necessary","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"敏捷开发","slug":"敏捷开发","count":1,"path":"api/categories/敏捷开发.json"}],"tags":[{"name":"web","slug":"web","count":1,"path":"api/tags/web.json"}],"author":{"name":"络擎","slug":"blog-author","avatar":"http://s-gz-2804-blog-image.oss.dogecdn.com/20230204150000.jpg","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}}}}