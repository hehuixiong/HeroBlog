[{"title":"Web前端性能优化","uid":"5add787e344d5502fefa25471add4e2d","slug":"20220226-front-end-performance-optimization","date":"2022-02-26T06:00:00.000Z","updated":"2022-02-28T02:11:30.394Z","comments":true,"path":"api/articles/20220226-front-end-performance-optimization.json","cover":"https://cdn.jsdelivr.net/gh/hehuixiong/image-blog/20220223164807.png","text":"1、前置知识面试题：输入url到页面最终呈现都发生了什么？ url解析：判断输入是关键字搜索还是url访问，对url进行解析 dns域名解析获取ip地址 缓存查找：浏览器缓存（chrome://net-internals/#dns地址查看）、系统缓存(hosts)、路由器缓存、i...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"前端优化","slug":"前端优化","count":1,"path":"api/categories/前端优化.json"}],"tags":[{"name":"优化","slug":"优化","count":1,"path":"api/tags/优化.json"}],"author":{"name":"络擎","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/hehuixiong/image-blog/20220224084700.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}},"feature":true},{"title":"JavaScript中命名约定的最佳实践","uid":"5b57e5b4a1488b082baaa9f5c5285d16","slug":"20220224-javascript-naming","date":"2022-02-24T10:00:00.000Z","updated":"2022-02-28T02:15:15.305Z","comments":true,"path":"api/articles/20220224-javascript-naming.json","cover":"https://cdn.jsdelivr.net/gh/hehuixiong/image-blog/20220226142235.png","text":"前言在前端开发过程中，遵循标准的命名约定可以提高代码的可读性。下面就来看看 JavaScript 中命名约定的最佳实践。 1. 变量的命名约定 JavaScript 变量名称是区分大小写的，大写和小写字母是不同的。比如： let DogName &#x3D; &#39;Scoob...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"}],"author":{"name":"络擎","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/hehuixiong/image-blog/20220224084700.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}},"feature":true},{"title":"TypeScript进阶之路","uid":"cdaf5778a92658d6959a7b30d99c6bfc","slug":"20220218-typescript-advanced","date":"2022-02-18T06:00:00.000Z","updated":"2022-02-28T02:14:48.452Z","comments":true,"path":"api/articles/20220218-typescript-advanced.json","cover":"https://cdn.jsdelivr.net/gh/hehuixiong/image-blog/20220223175131.png","text":"前言随着项目越来越大,市面上所使用的五花八门插件库也越来越多,随便一个项目都少说会1w+行代码以上,导致项目维护越来越差。尤其上在开发原生JavaScript的时候从中找Bug更是难如登天。TypeScript犹如the Saviour让更多开发者得心应手,也是现在开发大型工程化...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"TypeScript","slug":"TypeScript","count":1,"path":"api/categories/TypeScript.json"}],"tags":[{"name":"typeScript","slug":"typeScript","count":1,"path":"api/tags/typeScript.json"}],"author":{"name":"络擎","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/hehuixiong/image-blog/20220224084700.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}},"feature":true}]