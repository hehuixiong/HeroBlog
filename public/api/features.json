[{"title":"Vue Axios 本地跨域代理配置（多域名）","uid":"14e29f5d4726b0098dc9a270e6fbed07","slug":"20220506-vue.config.js-http","date":"2022-05-06T01:23:00.000Z","updated":"2022-05-06T01:39:08.284Z","comments":true,"path":"api/articles/20220506-vue.config.js-http.json","cover":null,"text":"vue-cli 3 的 vue.config.js 多域名跨域本地代理配置（与nginx.conf配置）背景在做项目时碰到了需要请求好几个域名下的接口的情况，而接口是确定没问题的，所以没有后台的同事介入，只能自己本地代理解决跨域的问题。 思路在 devServer.proxy中配...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Vue","slug":"Vue","count":2,"path":"api/categories/Vue.json"}],"tags":[{"name":"配置","slug":"配置","count":1,"path":"api/tags/配置.json"}],"author":{"name":"络擎","slug":"blog-author","avatar":"https://s-gz-2804-blog-image.oss.dogecdn.com/20220224084700.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}},"feature":true},{"title":"Web前端性能优化","uid":"5add787e344d5502fefa25471add4e2d","slug":"20220226-front-end-performance-optimization","date":"2022-02-26T06:00:00.000Z","updated":"2022-09-15T07:00:17.951Z","comments":true,"path":"api/articles/20220226-front-end-performance-optimization.json","cover":"https://s-gz-2804-blog-image.oss.dogecdn.com/20220223164807.png","text":"1、前置知识面试题：输入url到页面最终呈现都发生了什么？ url解析：判断输入是关键字搜索还是url访问，对url进行解析 dns域名解析获取ip地址 缓存查找：浏览器缓存（chrome://net-internals/#dns地址查看）、系统缓存(hosts)、路由器缓存、i...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"前端优化","slug":"前端优化","count":1,"path":"api/categories/前端优化.json"}],"tags":[{"name":"优化","slug":"优化","count":1,"path":"api/tags/优化.json"}],"author":{"name":"络擎","slug":"blog-author","avatar":"https://s-gz-2804-blog-image.oss.dogecdn.com/20220224084700.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}},"feature":true},{"title":"JavaScript中命名约定的最佳实践","uid":"5b57e5b4a1488b082baaa9f5c5285d16","slug":"20220224-javascript-naming","date":"2022-02-24T10:00:00.000Z","updated":"2022-09-15T07:00:17.947Z","comments":true,"path":"api/articles/20220224-javascript-naming.json","cover":"https://s-gz-2804-blog-image.oss.dogecdn.com/20220226142235.png","text":"前言在前端开发过程中，遵循标准的命名约定可以提高代码的可读性。下面就来看看 JavaScript 中命名约定的最佳实践。 1. 变量的命名约定 JavaScript 变量名称是区分大小写的，大写和小写字母是不同的。比如： let DogName &#x3D; &#39;Scoob...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"JavaScript","slug":"JavaScript","count":2,"path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":1,"path":"api/tags/JavaScript.json"}],"author":{"name":"络擎","slug":"blog-author","avatar":"https://s-gz-2804-blog-image.oss.dogecdn.com/20220224084700.png","link":"/","description":"Think like an artist, develop like an artisan.","socials":{"github":"https://github.com/hehuixiong","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com","csdn":"https://blog.csdn.net","juejin":"https://juejin.cn","customs":{}}},"feature":true}]